// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package phonenumberutil.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.google.i18n.phonenumbers.Phonenumber.PhoneNumber;
import com.google.i18n.phonenumbers.PhoneNumberUtil;

/**
 * Tests whether a phone number is valid for a certain region. Note this doesn't verify the number is actually in use, which is impossible to tell by just looking at a number itself. If the country calling code is not the same as the country calling code for the region, this immediately exits with false. After this, the specific number pattern rules for the region are examined. This is useful for determining for example whether a particular number is valid for Canada, rather than just a valid NANPA number.
 */
public class IsValidNumber extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String InputPhoneNumber;
	private java.lang.String RegionCode;

	public IsValidNumber(IContext context, java.lang.String InputPhoneNumber, java.lang.String RegionCode)
	{
		super(context);
		this.InputPhoneNumber = InputPhoneNumber;
		this.RegionCode = RegionCode;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		PhoneNumberUtil pnu = PhoneNumberUtil.getInstance();
		PhoneNumber phoneNumber = pnu.parse(this.InputPhoneNumber, this.RegionCode);
		return pnu.isValidNumber(phoneNumber);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "IsValidNumber";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
